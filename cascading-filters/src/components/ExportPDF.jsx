// components/ExportPDF.jsx
import React from "react";
import jsPDF from "jspdf";
import html2canvas from "html2canvas";
import autoTable from "jspdf-autotable";
import logo from "../assets/images/BSPHCL.png";

export default function ExportPDF({ title, kpiData, columns = [], chartsId }) {
  const handleDownloadPDF = async () => {
    const pdf = new jsPDF("landscape", "mm", "a4");

    // Logo
    pdf.addImage(logo, "PNG", 10, 8, 30, 20);

    // Title
    pdf.setFontSize(18);
    pdf.text(`BSPHCL â€“ ${title}`, 50, 18);
    pdf.setFontSize(11);
    pdf.text(`Section ID: ${kpiData.section_id || "-"} | Month: ${kpiData.month || "-"} | Year: ${kpiData.year || "-"}`, 50, 26);

    // KPI Table
    if (columns.length > 0) {
      const tableData = columns.map(([label, key]) => [label, kpiData[key] ?? "-"]);
      autoTable(pdf, {
        head: [["Metric", "Value"]],
        body: tableData,
        startY: 35,
        theme: "grid",
        styles: { fontSize: 10, halign: "center" },
        headStyles: { fillColor: [0, 102, 204], textColor: 255, halign: "center" },
      });
    }

    // Charts capture
    if (chartsId) {
      const chartsElement = document.getElementById(chartsId);
      if (chartsElement) {
        const canvas = await html2canvas(chartsElement, { scale: 2 });
        const imgData = canvas.toDataURL("image/png");

        // Fit chart within remaining space
        const pageWidth = pdf.internal.pageSize.getWidth() - 20;
        const pageHeight = pdf.internal.pageSize.getHeight() - (pdf.lastAutoTable?.finalY || 40) - 20;
        const imgHeight = (canvas.height * pageWidth) / canvas.width;

        pdf.addImage(
          imgData,
          "PNG",
          10,
          (pdf.lastAutoTable?.finalY || 40) + 10,
          pageWidth,
          imgHeight > pageHeight ? pageHeight : imgHeight
        );
      }
    }

    // Footer
    pdf.setFontSize(8);
    pdf.text("Generated by MIS System - Confidential", 10, pdf.internal.pageSize.getHeight() - 5);

    // Save file
    pdf.save(`${title.replace(/\s+/g, "_")}_${kpiData.month}_${kpiData.year}.pdf`);
  };

  return (
    <button onClick={handleDownloadPDF} className="btn btn-primary">
      ðŸ“„ Download PDF
    </button>
  );
}
